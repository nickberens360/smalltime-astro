---
import Layout from '../../../layouts/Layout.astro';
import { getPrintifyData, getPrintifyProducts, getPrintifyProduct } from '../../../lib/printify';
import ImageSlider from '../../../components/ImageSlider.vue';
import ProductOptions from '../../../components/ProductOptions.vue';

const { shopSlug, productSlug } = Astro.params;

let product = null;
let error = null;

const toSlug = (str) => str.toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]+/g, '');

const shopsResponse = await getPrintifyData();
if (!shopsResponse.success) {
  error = "Could not fetch shop information from Printify.";
} else {
  const currentShop = shopsResponse.data.find(s => toSlug(s.title) === shopSlug);

  if (!currentShop) {
    error = `Shop '${shopSlug}' could not be found.`;
  } else {
    const productsResponse = await getPrintifyProducts(currentShop.id);

    if (!productsResponse.success) {
      error = "Could not fetch product list from Printify.";
    } else {
      const currentProductMeta = productsResponse.products.find(p => toSlug(p.title) === productSlug);

      if (!currentProductMeta) {
        error = `Product '${productSlug}' could not be found in this shop.`;
      } else {
        const finalProductResponse = await getPrintifyProduct(currentShop.id, currentProductMeta.id);
        if (finalProductResponse.success) {
          product = finalProductResponse.product;
        } else {
          error = finalProductResponse.error;
        }
      }
    }
  }
}
---

<Layout title={product ? product.title : 'Product'}>
  <div class="product-detail-container">
    {error && <p class="error-message">{error}</p>}
    {product && (
        <div class="product-layout">
          <div class="product-images">
            {product.images.length > 1 ? (
                <ImageSlider client:load images={product.images} />
            ) : (
                <img src={product.images[0]?.src} alt={product.title} class="single-image" />
            )}
          </div>
          <div class="product-info">
            <h1>{product.title}</h1>
            <div class="description" set:html={product.description}></div>

            <ProductOptions client:load product={product} />
          </div>
        </div>
    )}
  </div>
</Layout>

<style>
  .product-detail-container {
    max-width: 1200px;
    margin: 2rem auto;
    padding: 0 2rem;
  }
  .product-layout {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
  }
  @media (min-width: 768px) {
    .product-layout {
      grid-template-columns: 1fr 1fr;
    }
  }
  .single-image {
    width: 100%;
    border-radius: 8px;
    border: 1px solid #eee;
  }
  .product-info h1 {
    margin-top: 0;
    font-size: 2.5rem;
  }
  .description {
    line-height: 1.6;
    margin-bottom: 2rem;
  }
  .description :global(p) {
    margin: 0 0 1em;
  }
  .error-message {
    text-align: center;
    color: red;
    padding: 2rem;
  }
</style>